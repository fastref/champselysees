var search_data = {"index":{"searchIndex":["projectexecution","derive_file()","non_neutral_element()","replace!()","unzip_slice_size_2()","readme","modules"],"longSearchIndex":["projectexecution","projectexecution#derive_file()","projectexecution#non_neutral_element()","projectexecution#replace!()","projectexecution#unzip_slice_size_2()","",""],"info":[["ProjectExecution","","ProjectExecution.html","","<p>instead of replacing a file, duplicate chunks having an entry.  supposed\nyou have a file modules.txt …\n"],["derive_file","ProjectExecution","ProjectExecution.html#method-i-derive_file","(args=ARGV)",""],["non_neutral_element","ProjectExecution","ProjectExecution.html#method-i-non_neutral_element","(args=ARGV)",""],["replace!","ProjectExecution","ProjectExecution.html#method-i-replace-21","(s, replacements ;)",""],["unzip_slice_size_2","ProjectExecution","ProjectExecution.html#method-i-unzip_slice_size_2","(args=ARGV)",""],["Readme","","Readme_md.html","","<p>unzip_slice_size_2.rb\n<p>Alternates a stream of params into 2 streams (starting from\n<code>$5</code>).\nUnderstand by examples: ...\n"],["modules","","modules_txt.html","","<p>MY_MODULE_1:\n<p>myModule_1 is a special module. execute it by calling my_module_1 on your\ninterface.\n<p>MY_MODULE_3 …\n"]]}}