var search_data = {"index":{"searchIndex":["object","rubyment","rubymentmodule","rubyment","trueclass","array_first_remainder()","array_first_remainder()","array_map()","array_map()","array_maps()","array_maps()","array_unflatten_base()","array_unflatten_base_shallow()","backtrace()","backtrace()","binary_dec()","binary_dec()","binary_dec_interactive()","binary_dec_interactive()","binary_enc()","binary_enc()","binary_input_multi_line()","binary_input_multi_line()","binary_input_multi_line_non_echo()","binary_input_multi_line_non_echo()","binary_input_single_line()","binary_input_single_line()","binary_input_single_line_non_echo()","binary_input_single_line_non_echo()","bl()","bl()","blea()","blea()","blef()","blef()","bloe()","bloe()","bloef()","bloef()","caller_label()","caller_label()","caller_labels()","caller_labels()","containerize()","containerize()","dec()","dec()","dec_interactive()","dec_interactive()","deserialize_json_metadata()","deserialize_json_metadata()","echo()","echo()","enc()","enc()","expect_equal()","expect_equal()","expect_format_string()","expect_format_string()","false?()","file_backup()","file_backup()","file_copy()","file_copy()","file_or_url_contents()","file_or_url_contents()","file_permissions_octal()","file_permissions_octal()","file_read()","file_read()","file_read_or_write()","file_read_or_write()","filename_replacer()","filename_replacer()","filepath_or_contents()","filepath_or_contents()","files_basenames_in_paths()","files_basenames_in_paths()","files_call_in_paths()","files_call_in_paths()","files_dirnames_in_paths()","files_dirnames_in_paths()","files_in_paths()","files_in_paths()","files_in_paths_reject_dirs()","files_in_paths_reject_dirs()","gem_bin_args()","gem_bin_args()","gem_build()","gem_build()","gem_build_push()","gem_build_push()","gem_files_args()","gem_files_args()","gem_get_api_key()","gem_get_api_key()","gem_install()","gem_install()","gem_list()","gem_list()","gem_path()","gem_path()","gem_push()","gem_push()","gem_spec()","gem_spec()","gem_uninstall()","gem_uninstall()","gem_uninstall_all()","gem_validate()","gem_validate()","gem_validate_args()","gem_validate_args()","generate_pbkdf2_key()","generate_pbkdf2_key()","http_ok_response()","http_ok_response()","http_response_base()","input_multi_line()","input_multi_line()","input_multi_line_non_echo()","input_multi_line_non_echo()","input_non_empty_filepath_or_contents_or_multiline_prompt()","input_non_empty_filepath_or_contents_or_multiline_prompt()","input_non_empty_string_or_multiline_prompt()","input_non_empty_string_or_multiline_prompt()","input_shift()","input_shift()","input_shift_or_empty_string()","input_shift_or_empty_string()","input_single_line()","input_single_line()","input_single_line_non_echo()","input_single_line_non_echo()","invoke()","invoke()","invoke_double()","invoke_double()","io_echo()","io_echo()","io_forward()","io_forward()","io_gets()","io_gets()","io_http_ok_response()","io_http_ok_response()","io_transform()","io_transform()","main()","main()","negate_me()","new()","new()","nne()","object_method_args_call()","object_method_args_call()","output_array_to_shell()","output_array_to_shell()","output_dec_file()","output_dec_file()","output_enc_file()","output_enc_file()","pushdown_operate()","rest_request()","rest_request()","rest_request_or_open_uri_open()","rest_response__request_base()","rubyment_gem_defaults()","rubyment_gem_defaults()","rubyment_gem_spec()","rubyment_gem_spec()","runea()","runea()","runef()","runef()","runef_threaded()","runef_threaded()","runoe()","runoe()","runoe_threaded()","runoe_threaded()","save_file()","save_file()","serialize_json_metadata()","serialize_json_metadata()","shell_dec()","shell_dec()","shell_dec_input()","shell_dec_input()","shell_dec_output()","shell_dec_output()","shell_enc()","shell_enc()","shell_enc_input()","shell_enc_input()","shell_enc_output()","shell_enc_output()","shell_popen2e_command()","shell_popen3_command()","shell_string_in_columns()","shell_string_in_columns()","ssl_make_server()","ssl_make_server()","ssl_make_servers()","ssl_sample_self_signed_cert()","ssl_sample_self_signed_cert()","ssl_sample_self_signed_cert_encrypted()","ssl_sample_self_signed_cert_encrypted()","string_in_columns()","string_in_columns()","string_repetition()","system_rubyment()","system_rubyment()","tcp_server_plain()","tcp_server_plain()","tcp_ssl_server()","tcp_ssl_server()","tcp_ssl_servers()","test__array_unflatten_base()","test__array_unflatten_base_shallow()","test__binary_dec_file_interactive()","test__binary_dec_file_interactive()","test__binary_enc_dec()","test__binary_enc_dec()","test__binary_enc_dec_file_interactive()","test__binary_enc_dec_file_interactive()","test__binary_enc_dec_interactive()","test__binary_enc_dec_interactive()","test__binary_enc_dec_nil()","test__binary_enc_dec_nil()","test__dec_file_interactive()","test__dec_file_interactive()","test__enc_dec()","test__enc_dec()","test__enc_dec_file_interactive()","test__enc_dec_file_interactive()","test__enc_dec_interactive()","test__enc_dec_interactive()","test__enc_dec_interactive__ssl_sample_self_signed_cert()","test__enc_dec_interactive__ssl_sample_self_signed_cert()","test__enc_dec_nil()","test__enc_dec_nil()","test__enc_dec_shell_programatically()","test__enc_dec_shell_programatically()","test__file_backup()","test__file_backup()","test__file_backup__but_keep()","test__file_backup__but_keep()","test__file_backup__when_file_is_dir()","test__file_backup__when_file_is_dir()","test__file_backup__when_file_is_dir__but_keep()","test__file_backup__when_file_is_dir__but_keep()","test__file_read__return_on_rescue()","test__file_read__return_on_rescue()","test__file_read__uri_root()","test__file_read__uri_root()","test__gem_build()","test__gem_build()","test__gem_build_install_validate_uninstall()","test__gem_build_install_validate_uninstall()","test__gem_complete_flow()","test__gem_complete_flow()","test__gem_get_api_key()","test__gem_get_api_key()","test__gem_uninstall_extreme_force()","test__json_metadata_serialization()","test__json_metadata_serialization()","test__object_nne()","test__object_nne()","test__rest_request()","test__rest_request()","test__rest_request__with_ayt()","test__rubyment_gem_spec()","test__rubyment_gem_spec()","test__rune_functions()","test__rune_functions()","test__shell_enc_dec()","test__shell_enc_dec()","test__shell_send_array__main()","test__string_repetition()","test__system_rubyment()","test__system_rubyment()","test__tcp_server_plain()","test__tcp_server_plain()","test__tcp_server_plain__with_http_ok_response()","test__tcp_server_plain__with_http_ok_response()","test__tcp_server_plain__with_io_http_response()","test__tcp_server_plain__with_io_http_response()","test__tcp_server_plain__with_io_transform()","test__tcp_server_plain__with_io_transform()","test__tcp_ssl_server__get_root()","test__tcp_ssl_server__get_root()","test__tcp_ssl_server__get_root__plain_redirect()","test__tcp_ssl_server__io_method()","test__tcp_ssl_server__io_method()","test__tcp_ssl_server__io_transform()","test__tcp_ssl_server__io_transform()","test__tcp_ssl_server__non_ssl()","test__tcp_ssl_server__non_ssl()","test__tcp_ssl_server__ssl_self_signed()","test__tcp_ssl_server__ssl_self_signed()","test__tester()","test__transform_call()","test__transform_call()","test_enc_dec_interactive__ssl_sample_self_signed_cert()","test_enc_dec_interactive__ssl_sample_self_signed_cert()","time_now_hash()","time_now_hash()","to_class()","to_class()","to_method()","to_method()","to_nil()","to_object_method()","to_object_method()","url_to_str()","url_to_str()","validate_require()","validate_require()","version()","version()","version_at_least()","version_at_least()"],"longSearchIndex":["object","rubyment","rubymentmodule","rubymentmodule::rubyment","trueclass","rubyment#array_first_remainder()","rubymentmodule#array_first_remainder()","rubyment#array_map()","rubymentmodule#array_map()","rubyment#array_maps()","rubymentmodule#array_maps()","rubymentmodule#array_unflatten_base()","rubymentmodule#array_unflatten_base_shallow()","rubyment#backtrace()","rubymentmodule#backtrace()","rubyment#binary_dec()","rubymentmodule#binary_dec()","rubyment#binary_dec_interactive()","rubymentmodule#binary_dec_interactive()","rubyment#binary_enc()","rubymentmodule#binary_enc()","rubyment#binary_input_multi_line()","rubymentmodule#binary_input_multi_line()","rubyment#binary_input_multi_line_non_echo()","rubymentmodule#binary_input_multi_line_non_echo()","rubyment#binary_input_single_line()","rubymentmodule#binary_input_single_line()","rubyment#binary_input_single_line_non_echo()","rubymentmodule#binary_input_single_line_non_echo()","rubyment#bl()","rubymentmodule#bl()","rubyment#blea()","rubymentmodule#blea()","rubyment#blef()","rubymentmodule#blef()","rubyment#bloe()","rubymentmodule#bloe()","rubyment#bloef()","rubymentmodule#bloef()","rubyment#caller_label()","rubymentmodule#caller_label()","rubyment#caller_labels()","rubymentmodule#caller_labels()","rubyment#containerize()","rubymentmodule#containerize()","rubyment#dec()","rubymentmodule#dec()","rubyment#dec_interactive()","rubymentmodule#dec_interactive()","rubyment#deserialize_json_metadata()","rubymentmodule#deserialize_json_metadata()","rubyment#echo()","rubymentmodule#echo()","rubyment#enc()","rubymentmodule#enc()","rubyment#expect_equal()","rubymentmodule#expect_equal()","rubyment#expect_format_string()","rubymentmodule#expect_format_string()","trueclass#false?()","rubyment#file_backup()","rubymentmodule#file_backup()","rubyment#file_copy()","rubymentmodule#file_copy()","rubyment#file_or_url_contents()","rubymentmodule#file_or_url_contents()","rubyment#file_permissions_octal()","rubymentmodule#file_permissions_octal()","rubyment#file_read()","rubymentmodule#file_read()","rubyment#file_read_or_write()","rubymentmodule#file_read_or_write()","rubyment#filename_replacer()","rubymentmodule#filename_replacer()","rubyment#filepath_or_contents()","rubymentmodule#filepath_or_contents()","rubyment#files_basenames_in_paths()","rubymentmodule#files_basenames_in_paths()","rubyment#files_call_in_paths()","rubymentmodule#files_call_in_paths()","rubyment#files_dirnames_in_paths()","rubymentmodule#files_dirnames_in_paths()","rubyment#files_in_paths()","rubymentmodule#files_in_paths()","rubyment#files_in_paths_reject_dirs()","rubymentmodule#files_in_paths_reject_dirs()","rubyment#gem_bin_args()","rubymentmodule#gem_bin_args()","rubyment#gem_build()","rubymentmodule#gem_build()","rubyment#gem_build_push()","rubymentmodule#gem_build_push()","rubyment#gem_files_args()","rubymentmodule#gem_files_args()","rubyment#gem_get_api_key()","rubymentmodule#gem_get_api_key()","rubyment#gem_install()","rubymentmodule#gem_install()","rubyment#gem_list()","rubymentmodule#gem_list()","rubyment#gem_path()","rubymentmodule#gem_path()","rubyment#gem_push()","rubymentmodule#gem_push()","rubyment#gem_spec()","rubymentmodule#gem_spec()","rubyment#gem_uninstall()","rubymentmodule#gem_uninstall()","rubymentmodule#gem_uninstall_all()","rubyment#gem_validate()","rubymentmodule#gem_validate()","rubyment#gem_validate_args()","rubymentmodule#gem_validate_args()","rubyment#generate_pbkdf2_key()","rubymentmodule#generate_pbkdf2_key()","rubyment#http_ok_response()","rubymentmodule#http_ok_response()","rubymentmodule#http_response_base()","rubyment#input_multi_line()","rubymentmodule#input_multi_line()","rubyment#input_multi_line_non_echo()","rubymentmodule#input_multi_line_non_echo()","rubyment#input_non_empty_filepath_or_contents_or_multiline_prompt()","rubymentmodule#input_non_empty_filepath_or_contents_or_multiline_prompt()","rubyment#input_non_empty_string_or_multiline_prompt()","rubymentmodule#input_non_empty_string_or_multiline_prompt()","rubyment#input_shift()","rubymentmodule#input_shift()","rubyment#input_shift_or_empty_string()","rubymentmodule#input_shift_or_empty_string()","rubyment#input_single_line()","rubymentmodule#input_single_line()","rubyment#input_single_line_non_echo()","rubymentmodule#input_single_line_non_echo()","rubyment#invoke()","rubymentmodule#invoke()","rubyment#invoke_double()","rubymentmodule#invoke_double()","rubyment#io_echo()","rubymentmodule#io_echo()","rubyment#io_forward()","rubymentmodule#io_forward()","rubyment#io_gets()","rubymentmodule#io_gets()","rubyment#io_http_ok_response()","rubymentmodule#io_http_ok_response()","rubyment#io_transform()","rubymentmodule#io_transform()","rubyment#main()","rubymentmodule#main()","object#negate_me()","rubyment::new()","rubymentmodule::new()","object#nne()","rubyment#object_method_args_call()","rubymentmodule#object_method_args_call()","rubyment#output_array_to_shell()","rubymentmodule#output_array_to_shell()","rubyment#output_dec_file()","rubymentmodule#output_dec_file()","rubyment#output_enc_file()","rubymentmodule#output_enc_file()","rubymentmodule#pushdown_operate()","rubyment#rest_request()","rubymentmodule#rest_request()","rubymentmodule#rest_request_or_open_uri_open()","rubymentmodule#rest_response__request_base()","rubyment#rubyment_gem_defaults()","rubymentmodule#rubyment_gem_defaults()","rubyment#rubyment_gem_spec()","rubymentmodule#rubyment_gem_spec()","rubyment#runea()","rubymentmodule#runea()","rubyment#runef()","rubymentmodule#runef()","rubyment#runef_threaded()","rubymentmodule#runef_threaded()","rubyment#runoe()","rubymentmodule#runoe()","rubyment#runoe_threaded()","rubymentmodule#runoe_threaded()","rubyment#save_file()","rubymentmodule#save_file()","rubyment#serialize_json_metadata()","rubymentmodule#serialize_json_metadata()","rubyment#shell_dec()","rubymentmodule#shell_dec()","rubyment#shell_dec_input()","rubymentmodule#shell_dec_input()","rubyment#shell_dec_output()","rubymentmodule#shell_dec_output()","rubyment#shell_enc()","rubymentmodule#shell_enc()","rubyment#shell_enc_input()","rubymentmodule#shell_enc_input()","rubyment#shell_enc_output()","rubymentmodule#shell_enc_output()","rubymentmodule#shell_popen2e_command()","rubymentmodule#shell_popen3_command()","rubyment#shell_string_in_columns()","rubymentmodule#shell_string_in_columns()","rubyment#ssl_make_server()","rubymentmodule#ssl_make_server()","rubymentmodule#ssl_make_servers()","rubyment#ssl_sample_self_signed_cert()","rubymentmodule#ssl_sample_self_signed_cert()","rubyment#ssl_sample_self_signed_cert_encrypted()","rubymentmodule#ssl_sample_self_signed_cert_encrypted()","rubyment#string_in_columns()","rubymentmodule#string_in_columns()","rubymentmodule#string_repetition()","rubyment#system_rubyment()","rubymentmodule#system_rubyment()","rubyment#tcp_server_plain()","rubymentmodule#tcp_server_plain()","rubyment#tcp_ssl_server()","rubymentmodule#tcp_ssl_server()","rubymentmodule#tcp_ssl_servers()","rubymentmodule#test__array_unflatten_base()","rubymentmodule#test__array_unflatten_base_shallow()","rubyment#test__binary_dec_file_interactive()","rubymentmodule#test__binary_dec_file_interactive()","rubyment#test__binary_enc_dec()","rubymentmodule#test__binary_enc_dec()","rubyment#test__binary_enc_dec_file_interactive()","rubymentmodule#test__binary_enc_dec_file_interactive()","rubyment#test__binary_enc_dec_interactive()","rubymentmodule#test__binary_enc_dec_interactive()","rubyment#test__binary_enc_dec_nil()","rubymentmodule#test__binary_enc_dec_nil()","rubyment#test__dec_file_interactive()","rubymentmodule#test__dec_file_interactive()","rubyment#test__enc_dec()","rubymentmodule#test__enc_dec()","rubyment#test__enc_dec_file_interactive()","rubymentmodule#test__enc_dec_file_interactive()","rubyment#test__enc_dec_interactive()","rubymentmodule#test__enc_dec_interactive()","rubyment#test__enc_dec_interactive__ssl_sample_self_signed_cert()","rubymentmodule#test__enc_dec_interactive__ssl_sample_self_signed_cert()","rubyment#test__enc_dec_nil()","rubymentmodule#test__enc_dec_nil()","rubyment#test__enc_dec_shell_programatically()","rubymentmodule#test__enc_dec_shell_programatically()","rubyment#test__file_backup()","rubymentmodule#test__file_backup()","rubyment#test__file_backup__but_keep()","rubymentmodule#test__file_backup__but_keep()","rubyment#test__file_backup__when_file_is_dir()","rubymentmodule#test__file_backup__when_file_is_dir()","rubyment#test__file_backup__when_file_is_dir__but_keep()","rubymentmodule#test__file_backup__when_file_is_dir__but_keep()","rubyment#test__file_read__return_on_rescue()","rubymentmodule#test__file_read__return_on_rescue()","rubyment#test__file_read__uri_root()","rubymentmodule#test__file_read__uri_root()","rubyment#test__gem_build()","rubymentmodule#test__gem_build()","rubyment#test__gem_build_install_validate_uninstall()","rubymentmodule#test__gem_build_install_validate_uninstall()","rubyment#test__gem_complete_flow()","rubymentmodule#test__gem_complete_flow()","rubyment#test__gem_get_api_key()","rubymentmodule#test__gem_get_api_key()","rubymentmodule#test__gem_uninstall_extreme_force()","rubyment#test__json_metadata_serialization()","rubymentmodule#test__json_metadata_serialization()","rubyment#test__object_nne()","rubymentmodule#test__object_nne()","rubyment#test__rest_request()","rubymentmodule#test__rest_request()","rubyment#test__rest_request__with_ayt()","rubyment#test__rubyment_gem_spec()","rubymentmodule#test__rubyment_gem_spec()","rubyment#test__rune_functions()","rubymentmodule#test__rune_functions()","rubyment#test__shell_enc_dec()","rubymentmodule#test__shell_enc_dec()","rubymentmodule#test__shell_send_array__main()","rubymentmodule#test__string_repetition()","rubyment#test__system_rubyment()","rubymentmodule#test__system_rubyment()","rubyment#test__tcp_server_plain()","rubymentmodule#test__tcp_server_plain()","rubyment#test__tcp_server_plain__with_http_ok_response()","rubymentmodule#test__tcp_server_plain__with_http_ok_response()","rubyment#test__tcp_server_plain__with_io_http_response()","rubymentmodule#test__tcp_server_plain__with_io_http_response()","rubyment#test__tcp_server_plain__with_io_transform()","rubymentmodule#test__tcp_server_plain__with_io_transform()","rubyment#test__tcp_ssl_server__get_root()","rubymentmodule#test__tcp_ssl_server__get_root()","rubymentmodule#test__tcp_ssl_server__get_root__plain_redirect()","rubyment#test__tcp_ssl_server__io_method()","rubymentmodule#test__tcp_ssl_server__io_method()","rubyment#test__tcp_ssl_server__io_transform()","rubymentmodule#test__tcp_ssl_server__io_transform()","rubyment#test__tcp_ssl_server__non_ssl()","rubymentmodule#test__tcp_ssl_server__non_ssl()","rubyment#test__tcp_ssl_server__ssl_self_signed()","rubymentmodule#test__tcp_ssl_server__ssl_self_signed()","rubymentmodule#test__tester()","rubyment#test__transform_call()","rubymentmodule#test__transform_call()","rubyment#test_enc_dec_interactive__ssl_sample_self_signed_cert()","rubymentmodule#test_enc_dec_interactive__ssl_sample_self_signed_cert()","rubyment#time_now_hash()","rubymentmodule#time_now_hash()","rubyment#to_class()","rubymentmodule#to_class()","rubyment#to_method()","rubymentmodule#to_method()","object#to_nil()","rubyment#to_object_method()","rubymentmodule#to_object_method()","rubyment#url_to_str()","rubymentmodule#url_to_str()","rubyment#validate_require()","rubymentmodule#validate_require()","rubyment#version()","rubymentmodule#version()","rubyment#version_at_least()","rubymentmodule#version_at_least()"],"info":[["Object","","Object.html","",""],["Rubyment","","Rubyment.html","","<p>Collection of Ruby functions\n<p>output\n\n<p>normally outputs to STDERR, with no mercy STDOUT, just qualified output: …\n"],["RubymentModule","","RubymentModule.html","","<p>Collection of Ruby functions\n<p>output\n\n<p>normally outputs to STDERR, with no mercy STDOUT, just qualified output: …\n"],["RubymentModule::Rubyment","","RubymentModule/Rubyment.html","",""],["TrueClass","","TrueClass.html","",""],["array_first_remainder","Rubyment","Rubyment.html#method-i-array_first_remainder","(args=ARGV)","<p>this class very often needs to split first argument and remaining elements.\nargs: args default: ARGV …\n"],["array_first_remainder","RubymentModule","RubymentModule.html#method-i-array_first_remainder","(args=ARGV)","<p>this class very often needs to split first argument and remaining elements.\nargs: args default: ARGV …\n"],["array_map","Rubyment","Rubyment.html#method-i-array_map","(a, method_name, method_args = nil)","<p>returns an enumeration of <code>method_name</code> for each element in the\nenumeration <code>a</code>. Useful for heterogeneous …\n"],["array_map","RubymentModule","RubymentModule.html#method-i-array_map","(a, method_name, method_args = nil)","<p>returns an enumeration of <code>method_name</code> for each element in the\nenumeration <code>a</code>. Useful for heterogeneous …\n"],["array_maps","Rubyment","Rubyment.html#method-i-array_maps","(args=ARGV)","<p>the same as #array_map (but takes all arguments at once)\n"],["array_maps","RubymentModule","RubymentModule.html#method-i-array_maps","(args=ARGV)","<p>the same as #array_map (but takes all arguments at once)\n"],["array_unflatten_base","RubymentModule","RubymentModule.html#method-i-array_unflatten_base","(args=[])","<p>will take a flatten array and makes it deeper, starting a new array\neverytime it finds the string +“[”+. …\n"],["array_unflatten_base_shallow","RubymentModule","RubymentModule.html#method-i-array_unflatten_base_shallow","(args=[])","<p>takes a flatten array and makes it deeper, starting a new array everytime\nit finds the string +“[”+. …\n"],["backtrace","Rubyment","Rubyment.html#method-i-backtrace","()","<p>returns a string having the current backtrace, for debugging.\n"],["backtrace","RubymentModule","RubymentModule.html#method-i-backtrace","()","<p>returns a string having the current backtrace, for debugging.\n"],["binary_dec","Rubyment","Rubyment.html#method-i-binary_dec","(args=ARGV)","<p>decipher the data encoded by binary_enc\n<p>@param [Array] args, an <code>Array</code> whose elements are expected to\nbe: …\n"],["binary_dec","RubymentModule","RubymentModule.html#method-i-binary_dec","(args=ARGV)","<p>decipher the data encoded by binary_enc\n<p>@param [Array] args, an <code>Array</code> whose elements are expected to\nbe: …\n"],["binary_dec_interactive","Rubyment","Rubyment.html#method-i-binary_dec_interactive","(args=ARGV)","<p>an alternative interface to binary_dec – reads password if nil or empty.\n<p>@param [Array] args Defaults …\n"],["binary_dec_interactive","RubymentModule","RubymentModule.html#method-i-binary_dec_interactive","(args=ARGV)","<p>an alternative interface to binary_dec – reads password if nil or empty.\n<p>@param [Array] args Defaults …\n"],["binary_enc","Rubyment","Rubyment.html#method-i-binary_enc","(args=ARGV)","<p>encode data into aes-128-cbc cipher protected by a key generated by\n#generate_pbkdf2_key, using given …\n"],["binary_enc","RubymentModule","RubymentModule.html#method-i-binary_enc","(args=ARGV)","<p>encode data into aes-128-cbc cipher protected by a key generated by\n#generate_pbkdf2_key, using given …\n"],["binary_input_multi_line","Rubyment","Rubyment.html#method-i-binary_input_multi_line","(args=ARGV)","<p>opens an echoing multiline prompt, if arg1 is nil or empty better prepared\nto work with binary input …\n"],["binary_input_multi_line","RubymentModule","RubymentModule.html#method-i-binary_input_multi_line","(args=ARGV)","<p>opens an echoing multiline prompt, if arg1 is nil or empty better prepared\nto work with binary input …\n"],["binary_input_multi_line_non_echo","Rubyment","Rubyment.html#method-i-binary_input_multi_line_non_echo","(args=ARGV)","<p>opens a non-echoing multiline prompt, if arg1 is nil or empty better\nprepared to work with binary input …\n"],["binary_input_multi_line_non_echo","RubymentModule","RubymentModule.html#method-i-binary_input_multi_line_non_echo","(args=ARGV)","<p>opens a non-echoing multiline prompt, if arg1 is nil or empty better\nprepared to work with binary input …\n"],["binary_input_single_line","Rubyment","Rubyment.html#method-i-binary_input_single_line","(args=ARGV)","<p>opens an echoing prompt, if arg1 is nil or empty better prepared to work\nwith binary input args:\n<p> arg1 … &mdash; \n"],["binary_input_single_line","RubymentModule","RubymentModule.html#method-i-binary_input_single_line","(args=ARGV)","<p>opens an echoing prompt, if arg1 is nil or empty better prepared to work\nwith binary input args:\n<p> arg1 … &mdash; \n"],["binary_input_single_line_non_echo","Rubyment","Rubyment.html#method-i-binary_input_single_line_non_echo","(args=ARGV)","<p>opens a non-echoing prompt, if arg1 is nil or empty better prepared to work\nwith binary input (which …\n"],["binary_input_single_line_non_echo","RubymentModule","RubymentModule.html#method-i-binary_input_single_line_non_echo","(args=ARGV)","<p>opens a non-echoing prompt, if arg1 is nil or empty better prepared to work\nwith binary input (which …\n"],["bl","Rubyment","Rubyment.html#method-i-bl","(*args, &block)","<p>creates a Proc out of a block\n"],["bl","RubymentModule","RubymentModule.html#method-i-bl","(*args, &block)","<p>creates a Proc out of a block\n"],["blea","Rubyment","Rubyment.html#method-i-blea","(*args, &block)","<p>creates a <code>Proc</code> out of a block, where exceptions may be\nadmissible or not, and to be printed or not. it …\n"],["blea","RubymentModule","RubymentModule.html#method-i-blea","(*args, &block)","<p>creates a <code>Proc</code> out of a block, where exceptions may be\nadmissible or not, and to be printed or not. it …\n"],["blef","Rubyment","Rubyment.html#method-i-blef","(*args, &block)","<p>creates a Proc out of a block, will capture all exceptions inside that\nblock and ignore it returns nil …\n"],["blef","RubymentModule","RubymentModule.html#method-i-blef","(*args, &block)","<p>creates a Proc out of a block, will capture all exceptions inside that\nblock and ignore it returns nil …\n"],["bloe","Rubyment","Rubyment.html#method-i-bloe","(*args, &block)","<p>creates a Proc out of a block, will capture all exceptions inside that\nblock and ignore it will return …\n"],["bloe","RubymentModule","RubymentModule.html#method-i-bloe","(*args, &block)","<p>creates a Proc out of a block, will capture all exceptions inside that\nblock and ignore it will return …\n"],["bloef","Rubyment","Rubyment.html#method-i-bloef","(*args, &block)","<p>creates a Proc out of a block, will capture all exceptions inside that\nblock and ignore it will return …\n"],["bloef","RubymentModule","RubymentModule.html#method-i-bloef","(*args, &block)","<p>creates a Proc out of a block, will capture all exceptions inside that\nblock and ignore it will return …\n"],["caller_label","Rubyment","Rubyment.html#method-i-caller_label","(*args)","<p>return the last_called function\n"],["caller_label","RubymentModule","RubymentModule.html#method-i-caller_label","(*args)","<p>return the last_called function\n"],["caller_labels","Rubyment","Rubyment.html#method-i-caller_labels","(begin_range=1, range_size=1)",""],["caller_labels","RubymentModule","RubymentModule.html#method-i-caller_labels","(begin_range=1, range_size=1)",""],["containerize","Rubyment","Rubyment.html#method-i-containerize","(args=ARGV)","<p>returns a Class object out of class_name (or itself if it is already a\nclass)\n"],["containerize","RubymentModule","RubymentModule.html#method-i-containerize","(args=ARGV)","<p>returns a Class object out of class_name (or itself if it is already a\nclass)\n"],["dec","Rubyment","Rubyment.html#method-i-dec","(args=ARGV)","<p>decipher the data encoded by enc\n<p>@param [Array] args, an <code>Array</code> whose elements are expected to\nbe:\n<p>password … &mdash; "],["dec","RubymentModule","RubymentModule.html#method-i-dec","(args=ARGV)","<p>decipher the data encoded by enc\n<p>@param [Array] args, an <code>Array</code> whose elements are expected to\nbe:\n<p>password … &mdash; "],["dec_interactive","Rubyment","Rubyment.html#method-i-dec_interactive","(args=ARGV)","<p>an alternative interface to dec – reads password if nil or empty.\n<p>@param [Array] args Defaults to <code>ARGV</code> …\n"],["dec_interactive","RubymentModule","RubymentModule.html#method-i-dec_interactive","(args=ARGV)","<p>an alternative interface to dec – reads password if nil or empty.\n<p>@param [Array] args Defaults to <code>ARGV</code> …\n"],["deserialize_json_metadata","Rubyment","Rubyment.html#method-i-deserialize_json_metadata","(args=ARGV)","<p>deserialize_json_metadata args:\n<p>serialized_string (String), separator (String) &mdash; undo what serialize_json_metadata …\n"],["deserialize_json_metadata","RubymentModule","RubymentModule.html#method-i-deserialize_json_metadata","(args=ARGV)","<p>deserialize_json_metadata args:\n<p>serialized_string (String), separator (String) &mdash; undo what serialize_json_metadata …\n"],["echo","Rubyment","Rubyment.html#method-i-echo","(args = ARGV)","<p>echoes the processing arg @param [Array] <code>args</code>, an\n<code>Array</code> whose elements are expected to be:\n<p>processing_arg … &mdash; "],["echo","RubymentModule","RubymentModule.html#method-i-echo","(args = ARGV)","<p>echoes the processing arg @param [Array] <code>args</code>, an\n<code>Array</code> whose elements are expected to be:\n<p>processing_arg … &mdash; "],["enc","Rubyment","Rubyment.html#method-i-enc","(args=ARGV)","<p>encode data into aes-128-cbc cipher protected by a key generated by\n#generate_pbkdf2_key, using given …\n"],["enc","RubymentModule","RubymentModule.html#method-i-enc","(args=ARGV)","<p>encode data into aes-128-cbc cipher protected by a key generated by\n#generate_pbkdf2_key, using given …\n"],["expect_equal","Rubyment","Rubyment.html#method-i-expect_equal","(args=ARGV)","<p>expect_equal args:\n<p> value_before (Object), value_after (Object), value_label (String)  &mdash; returns the value …\n\n"],["expect_equal","RubymentModule","RubymentModule.html#method-i-expect_equal","(args=ARGV)","<p>expect_equal args:\n<p> value_before (Object), value_after (Object), value_label (String)  &mdash; returns the value …\n\n"],["expect_format_string","Rubyment","Rubyment.html#method-i-expect_format_string","(args=ARGV)","<p>format strings for  expect_format_string\n"],["expect_format_string","RubymentModule","RubymentModule.html#method-i-expect_format_string","(args=ARGV)","<p>format strings for  expect_format_string\n"],["false?","TrueClass","TrueClass.html#method-i-false-3F","()","<p>returns <code>false</code> (purpose of simplifying functional programming)\n"],["file_backup","Rubyment","Rubyment.html#method-i-file_backup","(file = __FILE__ , dir = '/tmp/', append = ('-' + Time.now.hash.abs.to_s), prepend='/', permissions = nil)","<p>if file is a nonexisting filepath, or by any reason throws any exception,\nit will be treated as contents …\n"],["file_backup","RubymentModule","RubymentModule.html#method-i-file_backup","(file = __FILE__ , dir = '/tmp/', append = ('-' + Time.now.hash.abs.to_s), prepend='/', permissions = nil)","<p>if file is a nonexisting filepath, or by any reason throws any exception,\nit will be treated as contents …\n"],["file_copy","Rubyment","Rubyment.html#method-i-file_copy","(file = __FILE__, dir = '/tmp/', append = '', prepend='', permissions = nil)","<p>same interface as file_backup, but append and prepend defaults are empty.\n"],["file_copy","RubymentModule","RubymentModule.html#method-i-file_copy","(file = __FILE__, dir = '/tmp/', append = '', prepend='', permissions = nil)","<p>same interface as file_backup, but append and prepend defaults are empty.\n"],["file_or_url_contents","Rubyment","Rubyment.html#method-i-file_or_url_contents","(file)","<p>returns the contents of file. file can be a url, if &#39;open-uri&#39; is\navailable. can throw exceptions …\n"],["file_or_url_contents","RubymentModule","RubymentModule.html#method-i-file_or_url_contents","(file)","<p>returns the contents of file. file can be a url, if &#39;open-uri&#39; is\navailable. can throw exceptions …\n"],["file_permissions_octal","Rubyment","Rubyment.html#method-i-file_permissions_octal","(path)","<p>args: path (String) returns: file_permissions_octal (Integer, ready to go\nto chmod, or nil, if file doesn&#39;t …\n"],["file_permissions_octal","RubymentModule","RubymentModule.html#method-i-file_permissions_octal","(path)","<p>args: path (String) returns: file_permissions_octal (Integer, ready to go\nto chmod, or nil, if file doesn&#39;t …\n"],["file_read","Rubyment","Rubyment.html#method-i-file_read","(args=ARGV)","<p>reads a uri (if &#39;open-uri&#39; available, otherwise, just do a normal\nFile.read) @param [Array] args, …\n"],["file_read","RubymentModule","RubymentModule.html#method-i-file_read","(args=ARGV)","<p>reads a uri (if &#39;rest-client&#39; or &#39;open-uri&#39; available and\nthey don&#39;t throw any exception, …\n"],["file_read_or_write","Rubyment","Rubyment.html#method-i-file_read_or_write","(*args)","<p>reads the contents of a file. if the file doesn&#39;t exist, writes to the\nfile. note: the file may get …\n"],["file_read_or_write","RubymentModule","RubymentModule.html#method-i-file_read_or_write","(*args)","<p>reads the contents of a file. if the file doesn&#39;t exist, writes to the\nfile. note: the file may get …\n"],["filename_replacer","Rubyment","Rubyment.html#method-i-filename_replacer","()",""],["filename_replacer","RubymentModule","RubymentModule.html#method-i-filename_replacer","()",""],["filepath_or_contents","Rubyment","Rubyment.html#method-i-filepath_or_contents","(file, contents = \"\")","<p>returns the contents of file (or empty, or a default if a second parameter\nis given). if file is a nonexisting …\n"],["filepath_or_contents","RubymentModule","RubymentModule.html#method-i-filepath_or_contents","(file, contents = \"\")","<p>returns the contents of file (or empty, or a default if a second parameter\nis given). if file is a nonexisting …\n"],["files_basenames_in_paths","Rubyment","Rubyment.html#method-i-files_basenames_in_paths","(paths, reject_dirs=false)",""],["files_basenames_in_paths","RubymentModule","RubymentModule.html#method-i-files_basenames_in_paths","(paths, reject_dirs=false)",""],["files_call_in_paths","Rubyment","Rubyment.html#method-i-files_call_in_paths","(paths, method, reject_dirs=false)",""],["files_call_in_paths","RubymentModule","RubymentModule.html#method-i-files_call_in_paths","(paths, method, reject_dirs=false)",""],["files_dirnames_in_paths","Rubyment","Rubyment.html#method-i-files_dirnames_in_paths","(paths, reject_dirs=false)",""],["files_dirnames_in_paths","RubymentModule","RubymentModule.html#method-i-files_dirnames_in_paths","(paths, reject_dirs=false)",""],["files_in_paths","Rubyment","Rubyment.html#method-i-files_in_paths","(paths, reject_dirs=false)",""],["files_in_paths","RubymentModule","RubymentModule.html#method-i-files_in_paths","(paths, reject_dirs=false)",""],["files_in_paths_reject_dirs","Rubyment","Rubyment.html#method-i-files_in_paths_reject_dirs","(paths)",""],["files_in_paths_reject_dirs","RubymentModule","RubymentModule.html#method-i-files_in_paths_reject_dirs","(paths)",""],["gem_bin_args","Rubyment","Rubyment.html#method-i-gem_bin_args","(args=ARGV)","<p>extract only the arguments referring to the bin file generation from args\n"],["gem_bin_args","RubymentModule","RubymentModule.html#method-i-gem_bin_args","(args=ARGV)","<p>extract only the arguments referring to the bin file generation from args\n"],["gem_build","Rubyment","Rubyment.html#method-i-gem_build","(args=ARGV)","<p>gem_build args:\n<p>gem_spec_path (String), gem_spec_contents (String), gem_is_current_file, gem_name &mdash; returns: …\n\n"],["gem_build","RubymentModule","RubymentModule.html#method-i-gem_build","(args=ARGV)","<p>gem_build args:\n<p>gem_spec_path (String), gem_spec_contents (String), gem_is_current_file, gem_name &mdash; returns: …\n\n"],["gem_build_push","Rubyment","Rubyment.html#method-i-gem_build_push","(args=ARGV)","<p>builds, validates and push a gem accordingly to the arguments. if arguments\nnot given, will do for the …\n"],["gem_build_push","RubymentModule","RubymentModule.html#method-i-gem_build_push","(args=ARGV)","<p>builds, validates and push a gem accordingly to the arguments. if arguments\nnot given, will do for the …\n"],["gem_files_args","Rubyment","Rubyment.html#method-i-gem_files_args","(args=ARGV)","\n<pre class=\"ruby\"><span class=\"ruby-identifier\">extract</span> <span class=\"ruby-identifier\">only</span> <span class=\"ruby-identifier\">the</span> <span class=\"ruby-identifier\">arguments</span> <span class=\"ruby-identifier\">referring</span> <span class=\"ruby-identifier\">to</span> <span class=\"ruby-identifier\">files</span>\n</pre>\n<p>from args\n"],["gem_files_args","RubymentModule","RubymentModule.html#method-i-gem_files_args","(args=ARGV)","\n<pre class=\"ruby\"><span class=\"ruby-identifier\">extract</span> <span class=\"ruby-identifier\">only</span> <span class=\"ruby-identifier\">the</span> <span class=\"ruby-identifier\">arguments</span> <span class=\"ruby-identifier\">referring</span> <span class=\"ruby-identifier\">to</span> <span class=\"ruby-identifier\">files</span>\n</pre>\n<p>from args\n"],["gem_get_api_key","Rubyment","Rubyment.html#method-i-gem_get_api_key","(args=ARGV)","<p>gets the api key needed to push gems to rubygems. prompts for arguments\nwhen username or password not …\n"],["gem_get_api_key","RubymentModule","RubymentModule.html#method-i-gem_get_api_key","(args=ARGV)","<p>gets the api key needed to push gems to rubygems. prompts for arguments\nwhen username or password not …\n"],["gem_install","Rubyment","Rubyment.html#method-i-gem_install","(args=ARGV)","<p>gem_install args:\n<p>gem_spec (String) &mdash; returns: console output of gem install (String)\n\n"],["gem_install","RubymentModule","RubymentModule.html#method-i-gem_install","(args=ARGV)","<p>gem_install args:\n<p>gem_spec (String) &mdash; returns: console output of gem install (String)\n\n"],["gem_list","Rubyment","Rubyment.html#method-i-gem_list","(args=ARGV)","<p>gem_list args:\n<p>gem_spec (String) &mdash; returns: console output of gem install (String)\n\n"],["gem_list","RubymentModule","RubymentModule.html#method-i-gem_list","(args=ARGV)","<p>gem_list args:\n<p>gem_spec (String) &mdash; returns: console output of gem install (String)\n\n"],["gem_path","Rubyment","Rubyment.html#method-i-gem_path","(args=ARGV)","<p>returns the gem path given the params. args:\n<p>gem_name, gem_version, gem_dir, gem_ext, gem_hifen &mdash; all Strings …\n\n"],["gem_path","RubymentModule","RubymentModule.html#method-i-gem_path","(args=ARGV)","<p>returns the gem path given the params. args:\n<p>gem_name, gem_version, gem_dir, gem_ext, gem_hifen &mdash; all Strings …\n\n"],["gem_push","Rubyment","Rubyment.html#method-i-gem_push","(args=ARGV)","<p>gem_push args:\n<p>gem_spec (String) &mdash; returns: console output of gem push (String)\n\n"],["gem_push","RubymentModule","RubymentModule.html#method-i-gem_push","(args=ARGV)","<p>gem_push args:\n<p>gem_spec (String) &mdash; returns: console output of gem push (String)\n\n"],["gem_spec","Rubyment","Rubyment.html#method-i-gem_spec","(args=ARGV)","<p>gem_spec args (Array like the one returned by rubyment_gem_defaults)\nreturns: a gem spec string accordingly …\n"],["gem_spec","RubymentModule","RubymentModule.html#method-i-gem_spec","(args=ARGV)","<p>gem_spec args (Array like the one returned by rubyment_gem_defaults)\nreturns: a gem spec string accordingly …\n"],["gem_uninstall","Rubyment","Rubyment.html#method-i-gem_uninstall","(args=ARGV)","<p>gem_uninstall args:\n<p>gem_spec (String) &mdash; returns: console output of gem uninstall (String)\n\n"],["gem_uninstall","RubymentModule","RubymentModule.html#method-i-gem_uninstall","(args=ARGV)","<p>gem_uninstall args:\n<p>gem_spec (String) &mdash; returns: console output of gem uninstall (String)\n\n"],["gem_uninstall_all","RubymentModule","RubymentModule.html#method-i-gem_uninstall_all","(args=[])","<p>uninstall all versions of a specific gem @param [Array] <code>args</code>,\nan <code>Array</code> whose elements are expected to …\n"],["gem_validate","Rubyment","Rubyment.html#method-i-gem_validate","(args=ARGV)","<p>validate the installation of a gem args rubyment_gem_defaults but planned\nto change. bug detected: require …\n"],["gem_validate","RubymentModule","RubymentModule.html#method-i-gem_validate","(args=ARGV)","<p>validate the installation of a gem args rubyment_gem_defaults but planned\nto change. bug detected: require …\n"],["gem_validate_args","Rubyment","Rubyment.html#method-i-gem_validate_args","(args=ARGV)","\n<pre>extract only the arguments for validation</pre>\n<p>from args\n"],["gem_validate_args","RubymentModule","RubymentModule.html#method-i-gem_validate_args","(args=ARGV)","\n<pre>extract only the arguments for validation</pre>\n<p>from args\n"],["generate_pbkdf2_key","Rubyment","Rubyment.html#method-i-generate_pbkdf2_key","(args=ARGV)","<p>generates (by default) a 128 bit key for a Cipher (e.g. AES) args:\n<p> password, salt, iter, key_len  &mdash; returns: …\n"],["generate_pbkdf2_key","RubymentModule","RubymentModule.html#method-i-generate_pbkdf2_key","(args=ARGV)","<p>generates (by default) a 128 bit key for a Cipher (e.g. AES) args:\n<p> password, salt, iter, key_len  &mdash; returns: …\n"],["http_OK_response","Rubyment","Rubyment.html#method-i-http_OK_response","(args = ARGV)","<p>returns an HTTP response (1.1 200 OK by default) @param [Array]\n<code>args</code>, an <code>Array</code> whose elements are expected …\n"],["http_OK_response","RubymentModule","RubymentModule.html#method-i-http_OK_response","(args = ARGV)","<p>returns an HTTP response (1.1 200 OK by default) @param [Array]\n<code>args</code>, an <code>Array</code> whose elements are expected …\n"],["http_response_base","RubymentModule","RubymentModule.html#method-i-http_response_base","(args = [])","<p>returns an HTTP response @param [Array] <code>args</code>, an\n<code>Array</code> whose elements are expected to be:\n<p>response &mdash; <p>String … &mdash; "],["input_multi_line","Rubyment","Rubyment.html#method-i-input_multi_line","(args=ARGV)","<p>opens an echoing multiline prompt, if arg1 is nil or empty not prepared to\nwork with binary input (which …\n"],["input_multi_line","RubymentModule","RubymentModule.html#method-i-input_multi_line","(args=ARGV)","<p>opens an echoing multiline prompt, if arg1 is nil or empty not prepared to\nwork with binary input (which …\n"],["input_multi_line_non_echo","Rubyment","Rubyment.html#method-i-input_multi_line_non_echo","(args=ARGV)","<p>opens a non-echoing multiline prompt, if arg1 is nil or empty not prepared\nto work with binary input …\n"],["input_multi_line_non_echo","RubymentModule","RubymentModule.html#method-i-input_multi_line_non_echo","(args=ARGV)","<p>opens a non-echoing multiline prompt, if arg1 is nil or empty not prepared\nto work with binary input …\n"],["input_non_empty_filepath_or_contents_or_multiline_prompt","Rubyment","Rubyment.html#method-i-input_non_empty_filepath_or_contents_or_multiline_prompt","(args=ARGV)","<p>returns the filepath_or_contents of the first value of args if it is a non\nempty string, or prompt for …\n"],["input_non_empty_filepath_or_contents_or_multiline_prompt","RubymentModule","RubymentModule.html#method-i-input_non_empty_filepath_or_contents_or_multiline_prompt","(args=ARGV)","<p>returns the filepath_or_contents of the first value of args if it is a non\nempty string, or prompt for …\n"],["input_non_empty_string_or_multiline_prompt","Rubyment","Rubyment.html#method-i-input_non_empty_string_or_multiline_prompt","(args=ARGV)","<p>returns the first value of args if it is a non empty string, or prompt for\na multi line string. useful …\n"],["input_non_empty_string_or_multiline_prompt","RubymentModule","RubymentModule.html#method-i-input_non_empty_string_or_multiline_prompt","(args=ARGV)","<p>returns the first value of args if it is a non empty string, or prompt for\na multi line string. useful …\n"],["input_shift","Rubyment","Rubyment.html#method-i-input_shift","(args=ARGV)",""],["input_shift","RubymentModule","RubymentModule.html#method-i-input_shift","(args=ARGV)",""],["input_shift_or_empty_string","Rubyment","Rubyment.html#method-i-input_shift_or_empty_string","(args=ARGV, default = '')",""],["input_shift_or_empty_string","RubymentModule","RubymentModule.html#method-i-input_shift_or_empty_string","(args=ARGV, default = '')",""],["input_single_line","Rubyment","Rubyment.html#method-i-input_single_line","(args=ARGV)","<p>opens an echoing prompt, if arg1 is nil or empty not prepared to work with\nbinary input (which can contain …\n"],["input_single_line","RubymentModule","RubymentModule.html#method-i-input_single_line","(args=ARGV)","<p>opens an echoing prompt, if arg1 is nil or empty not prepared to work with\nbinary input (which can contain …\n"],["input_single_line_non_echo","Rubyment","Rubyment.html#method-i-input_single_line_non_echo","(args=ARGV)","<p>opens a non-echoing prompt, if arg1 is nil or empty not prepared to work\nwith binary input (which can …\n"],["input_single_line_non_echo","RubymentModule","RubymentModule.html#method-i-input_single_line_non_echo","(args=ARGV)","<p>opens a non-echoing prompt, if arg1 is nil or empty not prepared to work\nwith binary input (which can …\n"],["invoke","Rubyment","Rubyment.html#method-i-invoke","(args=ARGV)","<p>invoke first arg with following args used by initialize\n"],["invoke","RubymentModule","RubymentModule.html#method-i-invoke","(args=ARGV)","<p>invoke first arg with following args used by initialize\n"],["invoke_double","Rubyment","Rubyment.html#method-i-invoke_double","(args=ARGV)","<p>enables the possibility to inkove a second method with the results of a\nfirst one. eg, the results of …\n"],["invoke_double","RubymentModule","RubymentModule.html#method-i-invoke_double","(args=ARGV)","<p>enables the possibility to inkove a second method with the results of a\nfirst one. eg, the results of …\n"],["io_echo","Rubyment","Rubyment.html#method-i-io_echo","(args = ARGV)","<p>gets an input from <code>io</code> and writes it back to the same\n<code>io</code> supports an optional <code>replace</code> and\n<code>replacement</code> …\n"],["io_echo","RubymentModule","RubymentModule.html#method-i-io_echo","(args = ARGV)","<p>gets an input from <code>io</code> and writes it back to the same\n<code>io</code> supports an optional <code>replace</code> and\n<code>replacement</code> …\n"],["io_forward","Rubyment","Rubyment.html#method-i-io_forward","(args = ARGV)","<p>gets and forwards the input from one IO to a list of IOs @param [Array]\n<code>args</code>, an <code>Array</code> whose elements …\n"],["io_forward","RubymentModule","RubymentModule.html#method-i-io_forward","(args = ARGV)","<p>gets and forwards the input from one IO to a list of IOs @param [Array]\n<code>args</code>, an <code>Array</code> whose elements …\n"],["io_gets","Rubyment","Rubyment.html#method-i-io_gets","(args = ARGV)","<p>will call #gets on  <code>io</code> until line starts with\n<code>happy_with_request</code> @param [Array] <code>args</code>, an\n<code>Array</code> whose …\n"],["io_gets","RubymentModule","RubymentModule.html#method-i-io_gets","(args = ARGV)","<p>will call #gets on  <code>io</code> until line starts with\n<code>happy_with_request</code> @param [Array] <code>args</code>, an\n<code>Array</code> whose …\n"],["io_http_OK_response","Rubyment","Rubyment.html#method-i-io_http_OK_response","(args = ARGV)","<p>writes a response to an IO (e.g.: socket) @param [Array] <code>args</code>,\nan <code>Array</code> whose elements are expected to …\n"],["io_http_OK_response","RubymentModule","RubymentModule.html#method-i-io_http_OK_response","(args = ARGV)","<p>writes a response to an IO (e.g.: socket) @param [Array] <code>args</code>,\nan <code>Array</code> whose elements are expected to …\n"],["io_transform","Rubyment","Rubyment.html#method-i-io_transform","(args = ARGV)","<p>gets an input from <code>io</code> and writes it back to the same\n<code>io</code> supports an optional <code>replace</code> and\n<code>replacement</code> …\n"],["io_transform","RubymentModule","RubymentModule.html#method-i-io_transform","(args = ARGV)","<p>gets an input from <code>io</code> and writes it back to the same\n<code>io</code> supports an optional <code>replace</code> and\n<code>replacement</code> …\n"],["main","Rubyment","Rubyment.html#method-i-main","(args=ARGV)","<p>print arguments given\n"],["main","RubymentModule","RubymentModule.html#method-i-main","(args=ARGV)","<p>print arguments given\n"],["negate_me","Object","Object.html#method-i-negate_me","()","<p>returns +!self+\n"],["new","Rubyment","Rubyment.html#method-c-new","(memory = {})",""],["new","RubymentModule","RubymentModule.html#method-c-new","(memory = {})",""],["nne","Object","Object.html#method-i-nne","(default=nil)","<p>returns <code>self</code> if <code>self</code> is not considered to be the\nneutral element of its class. an object is considered …\n"],["object_method_args_call","Rubyment","Rubyment.html#method-i-object_method_args_call","(args=ARGV)","<p>calls object.method call_args note: function closed for extension. a new\nextension if ever made, will …\n"],["object_method_args_call","RubymentModule","RubymentModule.html#method-i-object_method_args_call","(args=ARGV)","<p>calls object.method call_args note: function closed for extension. a new\nextension if ever made, will …\n"],["output_array_to_shell","Rubyment","Rubyment.html#method-i-output_array_to_shell","(args=ARGV)","<p>outputs in such a way that it can be given as an array of parameters via\nbash shell not fully tested, …\n"],["output_array_to_shell","RubymentModule","RubymentModule.html#method-i-output_array_to_shell","(args=ARGV)","<p>outputs in such a way that it can be given as an array of parameters via\nbash shell not fully tested, …\n"],["output_dec_file","Rubyment","Rubyment.html#method-i-output_dec_file","(args=ARGV)","<p>output encrypted data (and data required to decrypt) into\nencrypted_base64_filename\n"],["output_dec_file","RubymentModule","RubymentModule.html#method-i-output_dec_file","(args=ARGV)","<p>output encrypted data (and data required to decrypt) into\nencrypted_base64_filename\n"],["output_enc_file","Rubyment","Rubyment.html#method-i-output_enc_file","(args=ARGV)","<p>output encrypted data (and data required to decrypt) into\nencrypted_base64_filename\n"],["output_enc_file","RubymentModule","RubymentModule.html#method-i-output_enc_file","(args=ARGV)","<p>output encrypted data (and data required to decrypt) into\nencrypted_base64_filename\n"],["pushdown_operate","RubymentModule","RubymentModule.html#method-i-pushdown_operate","(args=[])","<p>operates and/or returns a structure similar to an pushdown automaton.\n@param [Array] <code>args</code>, an <code>Array</code> whose …\n"],["rest_request","Rubyment","Rubyment.html#method-i-rest_request","(args=ARGV)","<p>makes a rest request. for now, the parameters must still be hardcoded.\n"],["rest_request","RubymentModule","RubymentModule.html#method-i-rest_request","(args=ARGV)","<p>makes a rest request. @param [Array] <code>args</code>, an\n<code>Array</code> whose elements are expected to be:\n<p>url &mdash; <p>String &mdash; \n<p>payload … &mdash; "],["rest_request_or_open_uri_open","RubymentModule","RubymentModule.html#method-i-rest_request_or_open_uri_open","(args=ARGV)","<p>calls #rest_request (which depends on +&#39;rest-client&#39;+ gem) in the\ncase it throws an exception, …\n"],["rest_response__request_base","RubymentModule","RubymentModule.html#method-i-rest_response__request_base","(args=ARGV)","<p>makes a rest request @param [Array] <code>args</code>, an\n<code>Array</code> whose elements are expected to be:\n<p>url &mdash; <p>String &mdash; \n<p>payload … &mdash; "],["rubyment_gem_defaults","Rubyment","Rubyment.html#method-i-rubyment_gem_defaults","(args=ARGV)","<p>defaults for the rubyment gem args:\n<p>gem_name, gem_version, gem_dir, gem_ext, gem_hifen &mdash; all Strings. defaults: …\n"],["rubyment_gem_defaults","RubymentModule","RubymentModule.html#method-i-rubyment_gem_defaults","(args=ARGV)","<p>defaults for the rubyment gem args:\n<p>gem_name, gem_version, gem_dir, gem_ext, gem_hifen &mdash; all Strings. defaults: …\n"],["rubyment_gem_spec","Rubyment","Rubyment.html#method-i-rubyment_gem_spec","(args=ARGV)","<p>rubyment_gem_spec args (Array, forwarded and transfomed by\nrubyment_gem_defaults) returns: a gem spec …\n"],["rubyment_gem_spec","RubymentModule","RubymentModule.html#method-i-rubyment_gem_spec","(args=ARGV)","<p>rubyment_gem_spec args (Array, forwarded and transfomed by\nrubyment_gem_defaults) returns: a gem spec …\n"],["runea","Rubyment","Rubyment.html#method-i-runea","(*args, &block)","<p>creates and runs a <code>Proc</code> out of a block, where exceptions may\nbe admissible or not, and to be printed …\n"],["runea","RubymentModule","RubymentModule.html#method-i-runea","(*args, &block)","<p>creates and runs a <code>Proc</code> out of a block, where exceptions may\nbe admissible or not, and to be printed …\n"],["runef","Rubyment","Rubyment.html#method-i-runef","(*args, &block)","\n<pre class=\"ruby\"><span class=\"ruby-identifier\">runs</span> <span class=\"ruby-identifier\">a</span> <span class=\"ruby-identifier\">block</span> <span class=\"ruby-identifier\">error</span> <span class=\"ruby-identifier\">free</span>\n</pre>\n<p>(returns nil if exception happens)\n"],["runef","RubymentModule","RubymentModule.html#method-i-runef","(*args, &block)","\n<pre class=\"ruby\"><span class=\"ruby-identifier\">runs</span> <span class=\"ruby-identifier\">a</span> <span class=\"ruby-identifier\">block</span> <span class=\"ruby-identifier\">error</span> <span class=\"ruby-identifier\">free</span>\n</pre>\n<p>(returns nil if exception happens)\n"],["runef_threaded","Rubyment","Rubyment.html#method-i-runef_threaded","(*args, &block)","\n<pre>runs a block error free, in</pre>\n<p>a different Thread. the Thread object\n\n<pre>is returned (call .join on it to</pre>\n"],["runef_threaded","RubymentModule","RubymentModule.html#method-i-runef_threaded","(*args, &block)","\n<pre>runs a block error free, in</pre>\n<p>a different Thread. the Thread object\n\n<pre>is returned (call .join on it to</pre>\n"],["runoe","Rubyment","Rubyment.html#method-i-runoe","(*args, &block)","<p>runs a block error free (if exception happens, will return an array having\nthe backtrace (as String) …\n"],["runoe","RubymentModule","RubymentModule.html#method-i-runoe","(*args, &block)","<p>runs a block error free (if exception happens, will return an array having\nthe backtrace (as String) …\n"],["runoe_threaded","Rubyment","Rubyment.html#method-i-runoe_threaded","(*args, &block)","<p>runs a block error free, in a different Thread. the Thread object is\nreturned (call .join on it to wait …\n"],["runoe_threaded","RubymentModule","RubymentModule.html#method-i-runoe_threaded","(*args, &block)","<p>runs a block error free, in a different Thread. the Thread object is\nreturned (call .join on it to wait …\n"],["save_file","Rubyment","Rubyment.html#method-i-save_file","(url, location, wtime=0, more = {})","<p>save url contents to a local file location url can be a uri to a local file\nargs: url (String), location …\n"],["save_file","RubymentModule","RubymentModule.html#method-i-save_file","(url, location, wtime=0, more = {})","<p>save url contents to a local file location url can be a uri to a local file\nargs: url (String), location …\n"],["serialize_json_metadata","Rubyment","Rubyment.html#method-i-serialize_json_metadata","(args=ARGV)","<p>serialize_json_metadata args:\n<p>payload (String), metadata (Hash), separator (String) &mdash; prepends a JSON dump …\n\n"],["serialize_json_metadata","RubymentModule","RubymentModule.html#method-i-serialize_json_metadata","(args=ARGV)","<p>serialize_json_metadata args:\n<p>payload (String), metadata (Hash), separator (String) &mdash; prepends a JSON dump …\n\n"],["shell_dec","Rubyment","Rubyment.html#method-i-shell_dec","(args=ARGV)","<p>prompts for arguments to dec, calls dec, and output the decrypted data to\nstdout. args: (forwarded to …\n"],["shell_dec","RubymentModule","RubymentModule.html#method-i-shell_dec","(args=ARGV)","<p>prompts for arguments to dec, calls dec, and output the decrypted data to\nstdout. args: (forwarded to …\n"],["shell_dec_input","Rubyment","Rubyment.html#method-i-shell_dec_input","(args=ARGV)","<p>prompts for arguments to dec function args:\n<p> iv, encrypted, password  &mdash; (all Strings)\n\n<p>returns:\n"],["shell_dec_input","RubymentModule","RubymentModule.html#method-i-shell_dec_input","(args=ARGV)","<p>prompts for arguments to dec function args:\n<p> iv, encrypted, password  &mdash; (all Strings)\n\n<p>returns:\n"],["shell_dec_output","Rubyment","Rubyment.html#method-i-shell_dec_output","(args=ARGV)","<p>and output the decrypted data to stdout.\n<p>planned changes: stop argument shifting. call separate functions. …\n"],["shell_dec_output","RubymentModule","RubymentModule.html#method-i-shell_dec_output","(args=ARGV)","<p>and output the decrypted data to stdout.\n<p>planned changes: stop argument shifting. call separate functions. …\n"],["shell_enc","Rubyment","Rubyment.html#method-i-shell_enc","(args=ARGV)","<p>shell_enc args\n<p>password, data, encrypted_base64_filename, enc_iv_base64_filename_deprecated &mdash; (all Strings …\n\n"],["shell_enc","RubymentModule","RubymentModule.html#method-i-shell_enc","(args=ARGV)","<p>shell_enc args\n<p>password, data, encrypted_base64_filename, enc_iv_base64_filename_deprecated &mdash; (all Strings …\n\n"],["shell_enc_input","Rubyment","Rubyment.html#method-i-shell_enc_input","(args=ARGV)","<p>prompts for arguments to dec args:\n<p> multiline_data, data_file, single_line_data, password, encrypted_base64_filename … &mdash; "],["shell_enc_input","RubymentModule","RubymentModule.html#method-i-shell_enc_input","(args=ARGV)","<p>prompts for arguments to dec args:\n<p> multiline_data, data_file, single_line_data, password, encrypted_base64_filename … &mdash; "],["shell_enc_output","Rubyment","Rubyment.html#method-i-shell_enc_output","(args=ARGV)","<p>outputs the results from enc\n"],["shell_enc_output","RubymentModule","RubymentModule.html#method-i-shell_enc_output","(args=ARGV)","<p>outputs the results from enc\n"],["shell_popen2e_command","RubymentModule","RubymentModule.html#method-i-shell_popen2e_command","(args=[])","<p>runs a command in a shell (requires &#39;open3&#39;) returns stdout and\nstderr output mixed @param [Array] …\n"],["shell_popen3_command","RubymentModule","RubymentModule.html#method-i-shell_popen3_command","(args=[])","<p>runs a command in a shell (requires &#39;open3&#39;) returns stdout and\nstderr output separated @param …\n"],["shell_string_in_columns","Rubyment","Rubyment.html#method-i-shell_string_in_columns","(args=ARGV)","<p>planned changes: use stdin from memory instead\n"],["shell_string_in_columns","RubymentModule","RubymentModule.html#method-i-shell_string_in_columns","(args=ARGV)","<p>planned changes: use stdin from memory instead\n"],["ssl_make_server","Rubyment","Rubyment.html#method-i-ssl_make_server","(*args)","<p>makes an OpenSSL server  @param [splat] <code>args</code>, an splat whose\nelements are expected to be:\n<p>listening_port … &mdash; "],["ssl_make_server","RubymentModule","RubymentModule.html#method-i-ssl_make_server","(*args)","<p>makes an OpenSSL server  just an interface to the more powerful recommended\n#ssl_make_servers (kept for …\n"],["ssl_make_servers","RubymentModule","RubymentModule.html#method-i-ssl_make_servers","(args=ARGV)","<p>makes one or more OpenSSL server @param [Array] <code>args</code>, an\n<code>Array</code> whose elements are expected to be:\n<p>listening_port … &mdash; "],["ssl_sample_self_signed_cert","Rubyment","Rubyment.html#method-i-ssl_sample_self_signed_cert","(*args)","<p>returns a sample self signed certificate-private key pair that once was\ncreated with the command (no …\n"],["ssl_sample_self_signed_cert","RubymentModule","RubymentModule.html#method-i-ssl_sample_self_signed_cert","(*args)","<p>returns a sample self signed certificate-private key pair that once was\ncreated with the command (no …\n"],["ssl_sample_self_signed_cert_encrypted","Rubyment","Rubyment.html#method-i-ssl_sample_self_signed_cert_encrypted","(*args)","<p>has the same functionality as #ssl_sample_self_signed_cert. this one is\nleft as an example on how safely …\n"],["ssl_sample_self_signed_cert_encrypted","RubymentModule","RubymentModule.html#method-i-ssl_sample_self_signed_cert_encrypted","(*args)","<p>has the same functionality as #ssl_sample_self_signed_cert. this one is\nleft as an example on how safely …\n"],["string_in_columns","Rubyment","Rubyment.html#method-i-string_in_columns","(s, max_column=80)","<p>place a n at every max_column chars approximately (a word can be bigger\nthan max_column, and some other …\n"],["string_in_columns","RubymentModule","RubymentModule.html#method-i-string_in_columns","(s, max_column=80)","<p>place a n at every max_column chars approximately (a word can be bigger\nthan max_column, and some other …\n"],["string_repetition","RubymentModule","RubymentModule.html#method-i-string_repetition","(args=[])","<p>tests if  <code>operand_1</code> is only composed by a repetition of\n<code>operand_2</code> @param [Array] <code>args</code>, an\n<code>Array</code> whose …\n"],["system_rubyment","Rubyment","Rubyment.html#method-i-system_rubyment","(args=ARGV)","<p>system_rubyment requires a system&#39;s Rubyment and invoke it using args\nargs: args (Array) returns: …\n"],["system_rubyment","RubymentModule","RubymentModule.html#method-i-system_rubyment","(args=ARGV)","<p>system_rubyment requires a system&#39;s Rubyment and invoke it using args\nargs: args (Array) returns: …\n"],["tcp_server_plain","Rubyment","Rubyment.html#method-i-tcp_server_plain","(args = ARGV)","<p>opens a TCP server accepting connections. @param [Array] <code>args</code>,\nan <code>Array</code> whose elements are expected to …\n"],["tcp_server_plain","RubymentModule","RubymentModule.html#method-i-tcp_server_plain","(args = ARGV)","<p>opens a TCP server accepting connections. @param [Array] <code>args</code>,\nan <code>Array</code> whose elements are expected to …\n"],["tcp_ssl_server","Rubyment","Rubyment.html#method-i-tcp_ssl_server","(args = ARGV)","<p>opens an SSL server accepting connections. @param [Array]\n<code>args</code>, an <code>Array</code> whose elements are expected …\n"],["tcp_ssl_server","RubymentModule","RubymentModule.html#method-i-tcp_ssl_server","(args = ARGV)","<p>opens an SSL server accepting connections. @param [Array]\n<code>args</code>, an <code>Array</code> whose elements are expected …\n"],["tcp_ssl_servers","RubymentModule","RubymentModule.html#method-i-tcp_ssl_servers","(args = ARGV)","<p>opens one or more TCP and/or SSL server accepting connections. @param\n[Array] <code>args</code>, an <code>Array</code> whose elements …\n"],["test__array_unflatten_base","RubymentModule","RubymentModule.html#method-i-test__array_unflatten_base","(args=[])","<p>test for #array_unflatten_base\n"],["test__array_unflatten_base_shallow","RubymentModule","RubymentModule.html#method-i-test__array_unflatten_base_shallow","(args=[])","<p>test for #array_unflatten_base_shallow\n"],["test__binary_dec_file_interactive","Rubyment","Rubyment.html#method-i-test__binary_dec_file_interactive","(args=ARGV)","<p>basically the reverse of test__binary_enc_dec_file_interactive planned\nimprovements: still outputs to …\n"],["test__binary_dec_file_interactive","RubymentModule","RubymentModule.html#method-i-test__binary_dec_file_interactive","(args=ARGV)","<p>basically the reverse of test__binary_enc_dec_file_interactive planned\nimprovements: still outputs to …\n"],["test__binary_enc_dec","Rubyment","Rubyment.html#method-i-test__binary_enc_dec","(args=ARGV)","<p>test for binary_enc and binary_dec.\n<p>@param [Array] args, an <code>Array</code> whose elements are expected to\nbe:\n<p>data … &mdash; "],["test__binary_enc_dec","RubymentModule","RubymentModule.html#method-i-test__binary_enc_dec","(args=ARGV)","<p>test for binary_enc and binary_dec.\n<p>@param [Array] args, an <code>Array</code> whose elements are expected to\nbe:\n<p>data … &mdash; "],["test__binary_enc_dec_file_interactive","Rubyment","Rubyment.html#method-i-test__binary_enc_dec_file_interactive","(args=ARGV)","<p>similar to test__binary_enc_dec_interactive, just that the data is ready\nfrom a file instead note that …\n"],["test__binary_enc_dec_file_interactive","RubymentModule","RubymentModule.html#method-i-test__binary_enc_dec_file_interactive","(args=ARGV)","<p>similar to test__binary_enc_dec_interactive, just that the data is ready\nfrom a file instead note that …\n"],["test__binary_enc_dec_interactive","Rubyment","Rubyment.html#method-i-test__binary_enc_dec_interactive","(args=ARGV)","<p>test for binary_enc and binary_dec_interactive. good idea is to use this\nfunction once with the desired …\n"],["test__binary_enc_dec_interactive","RubymentModule","RubymentModule.html#method-i-test__binary_enc_dec_interactive","(args=ARGV)","<p>test for binary_enc and binary_dec_interactive. good idea is to use this\nfunction once with the desired …\n"],["test__binary_enc_dec_nil","Rubyment","Rubyment.html#method-i-test__binary_enc_dec_nil","(args=ARGV)","<p>test for binary_enc and binary_dec. “” and nil are expected to be treated\nas the same.\n"],["test__binary_enc_dec_nil","RubymentModule","RubymentModule.html#method-i-test__binary_enc_dec_nil","(args=ARGV)","<p>test for binary_enc and binary_dec. “” and nil are expected to be treated\nas the same.\n"],["test__dec_file_interactive","Rubyment","Rubyment.html#method-i-test__dec_file_interactive","(args=ARGV)","<p>basically the reverse of test__enc_dec_file_interactive planned\nimprovements: still outputs to stdout …\n"],["test__dec_file_interactive","RubymentModule","RubymentModule.html#method-i-test__dec_file_interactive","(args=ARGV)","<p>basically the reverse of test__enc_dec_file_interactive planned\nimprovements: still outputs to stdout …\n"],["test__enc_dec","Rubyment","Rubyment.html#method-i-test__enc_dec","(args=ARGV)","<p>test for enc and dec.\n<p>@param [Array] args, an <code>Array</code> whose elements are expected to\nbe:\n<p>data &mdash; <p>String, nil … &mdash; "],["test__enc_dec","RubymentModule","RubymentModule.html#method-i-test__enc_dec","(args=ARGV)","<p>test for enc and dec.\n<p>@param [Array] args, an <code>Array</code> whose elements are expected to\nbe:\n<p>data &mdash; <p>String, nil … &mdash; "],["test__enc_dec_file_interactive","Rubyment","Rubyment.html#method-i-test__enc_dec_file_interactive","(args=ARGV)","<p>similar to test__enc_dec_interactive, just that the data is ready from a\nfile instead note that there …\n"],["test__enc_dec_file_interactive","RubymentModule","RubymentModule.html#method-i-test__enc_dec_file_interactive","(args=ARGV)","<p>similar to test__enc_dec_interactive, just that the data is ready from a\nfile instead note that there …\n"],["test__enc_dec_interactive","Rubyment","Rubyment.html#method-i-test__enc_dec_interactive","(args=ARGV)","<p>test for enc and dec_interactive. good idea is to use this function once\nwith the desired data, password, …\n"],["test__enc_dec_interactive","RubymentModule","RubymentModule.html#method-i-test__enc_dec_interactive","(args=ARGV)","<p>test for enc and dec_interactive. good idea is to use this function once\nwith the desired data, password, …\n"],["test__enc_dec_interactive__ssl_sample_self_signed_cert","Rubyment","Rubyment.html#method-i-test__enc_dec_interactive__ssl_sample_self_signed_cert","(*args)","<p>#test_enc_dec_interactive__ssl_sample_self_signed_cert function name out of\nstandard. this one should …\n"],["test__enc_dec_interactive__ssl_sample_self_signed_cert","RubymentModule","RubymentModule.html#method-i-test__enc_dec_interactive__ssl_sample_self_signed_cert","(*args)","<p>#test_enc_dec_interactive__ssl_sample_self_signed_cert function name out of\nstandard. this one should …\n"],["test__enc_dec_nil","Rubyment","Rubyment.html#method-i-test__enc_dec_nil","(args=ARGV)","<p>test for enc and dec. “” and nil are expected to be treated as the same.\n"],["test__enc_dec_nil","RubymentModule","RubymentModule.html#method-i-test__enc_dec_nil","(args=ARGV)","<p>test for enc and dec. “” and nil are expected to be treated as the same.\n"],["test__enc_dec_shell_programatically","Rubyment","Rubyment.html#method-i-test__enc_dec_shell_programatically","(args=ARGV)","<p>test for enc and dec and output_array_to_shell. output_array_to_shell\nshould create proper arguments …\n"],["test__enc_dec_shell_programatically","RubymentModule","RubymentModule.html#method-i-test__enc_dec_shell_programatically","(args=ARGV)","<p>test for enc and dec and output_array_to_shell. output_array_to_shell\nshould create proper arguments …\n"],["test__file_backup","Rubyment","Rubyment.html#method-i-test__file_backup","(args=ARGV)","<p>test file_backup (just like a copy)\n"],["test__file_backup","RubymentModule","RubymentModule.html#method-i-test__file_backup","(args=ARGV)","<p>test file_backup (just like a copy)\n"],["test__file_backup__but_keep","Rubyment","Rubyment.html#method-i-test__file_backup__but_keep","(args=ARGV)","<p>same as test__file_backup, but backup is not removed.\n"],["test__file_backup__but_keep","RubymentModule","RubymentModule.html#method-i-test__file_backup__but_keep","(args=ARGV)","<p>same as test__file_backup, but backup is not removed.\n"],["test__file_backup__when_file_is_dir","Rubyment","Rubyment.html#method-i-test__file_backup__when_file_is_dir","(args=ARGV)","<p>test file_backup when file is a dir\n"],["test__file_backup__when_file_is_dir","RubymentModule","RubymentModule.html#method-i-test__file_backup__when_file_is_dir","(args=ARGV)","<p>test file_backup when file is a dir\n"],["test__file_backup__when_file_is_dir__but_keep","Rubyment","Rubyment.html#method-i-test__file_backup__when_file_is_dir__but_keep","(args=ARGV)","<p>same as test__file_backup__when_file_is_dir, but backup is not removed.\n"],["test__file_backup__when_file_is_dir__but_keep","RubymentModule","RubymentModule.html#method-i-test__file_backup__when_file_is_dir__but_keep","(args=ARGV)","<p>same as test__file_backup__when_file_is_dir, but backup is not removed.\n"],["test__file_read__return_on_rescue","Rubyment","Rubyment.html#method-i-test__file_read__return_on_rescue","(args=ARGV)","<p>tests #file_read_or_write and #file_read specially its\n<code>return_on_rescue</code> parameter. attention that files …\n"],["test__file_read__return_on_rescue","RubymentModule","RubymentModule.html#method-i-test__file_read__return_on_rescue","(args=ARGV)","<p>tests #file_read_or_write and #file_read specially its\n<code>return_on_rescue</code> parameter. attention that files …\n"],["test__file_read__uri_root","Rubyment","Rubyment.html#method-i-test__file_read__uri_root","(args = ARGV)","<p>tests file_read against a uri. created to test a client for servers created\nwith #test__tcp_ssl_server__io_method …\n"],["test__file_read__uri_root","RubymentModule","RubymentModule.html#method-i-test__file_read__uri_root","(args = ARGV)","<p>tests file_read against a uri. created to test a client for servers created\nwith #test__tcp_ssl_server__io_method …\n"],["test__gem_build","Rubyment","Rubyment.html#method-i-test__gem_build","(args=ARGV)","<p>test for gem_build: builds gem for this rubyment file after it, these\ncommands will install/uninstall …\n"],["test__gem_build","RubymentModule","RubymentModule.html#method-i-test__gem_build","(args=ARGV)","<p>test for gem_build: builds gem for this rubyment file after it, these\ncommands will install/uninstall …\n"],["test__gem_build_install_validate_uninstall","Rubyment","Rubyment.html#method-i-test__gem_build_install_validate_uninstall","(args=ARGV)","<p>test for gem_build, gem_install, gem_list system_rubyment, gem_uninstall\nnote that, if there is a “rubyment” …\n"],["test__gem_build_install_validate_uninstall","RubymentModule","RubymentModule.html#method-i-test__gem_build_install_validate_uninstall","(args=ARGV)","<p>test for gem_build, gem_install, gem_list system_rubyment, gem_uninstall\nnote that, if there is a “rubyment” …\n"],["test__gem_complete_flow","Rubyment","Rubyment.html#method-i-test__gem_complete_flow","(args=ARGV)","<p>test for gem_build, gem_install, gem_list system_rubyment, gem_uninstall\nargs: args (Array or nil) returns: …\n"],["test__gem_complete_flow","RubymentModule","RubymentModule.html#method-i-test__gem_complete_flow","(args=ARGV)","<p>test for gem_build, gem_install, gem_list system_rubyment, gem_uninstall\nargs: args (Array or nil) returns: …\n"],["test__gem_get_api_key","Rubyment","Rubyment.html#method-i-test__gem_get_api_key","(args=ARGV)","<p>test for test__gem_get_api_key args: (Array - forwarded to gem_get_api_key)\nreturns: nil\n"],["test__gem_get_api_key","RubymentModule","RubymentModule.html#method-i-test__gem_get_api_key","(args=ARGV)","<p>test for test__gem_get_api_key args: (Array - forwarded to gem_get_api_key)\nreturns: nil\n"],["test__gem_uninstall_extreme_force","RubymentModule","RubymentModule.html#method-i-test__gem_uninstall_extreme_force","(args=ARGV)","<p>forces the uninstallation of a gem in all the ways we can mostly for\ninternal tests that needs to ensure …\n"],["test__json_metadata_serialization","Rubyment","Rubyment.html#method-i-test__json_metadata_serialization","(args=ARGV)","<p>test__json_metadata_serialization sanity test for serialize_json_metadata\nand deserialize_json_metadata …\n"],["test__json_metadata_serialization","RubymentModule","RubymentModule.html#method-i-test__json_metadata_serialization","(args=ARGV)","<p>test__json_metadata_serialization sanity test for serialize_json_metadata\nand deserialize_json_metadata …\n"],["test__object_nne","Rubyment","Rubyment.html#method-i-test__object_nne","(args = ARGV)","<p>test for Object::nne\n"],["test__object_nne","RubymentModule","RubymentModule.html#method-i-test__object_nne","(args = ARGV)","<p>test for Object::nne\n"],["test__rest_request","Rubyment","Rubyment.html#method-i-test__rest_request","(args=ARGV)","<p>test #rest_request for now, the parameters must still be hardcoded.\n"],["test__rest_request","RubymentModule","RubymentModule.html#method-i-test__rest_request","(args=ARGV)","<p>test #rest_request for now, the parameters must still be hardcoded.\n"],["test__rest_request__with_ayt","Rubyment","Rubyment.html#method-i-test__rest_request__with_ayt","(args=ARGV)","<p>test #rest_request for now, the parameters must still be hardcoded.\n"],["test__rubyment_gem_spec","Rubyment","Rubyment.html#method-i-test__rubyment_gem_spec","(args=ARGV)","<p>test for rubyment_gem_spec. outputs the contents returned by that function.\nargs: none returns: none …\n"],["test__rubyment_gem_spec","RubymentModule","RubymentModule.html#method-i-test__rubyment_gem_spec","(args=ARGV)","<p>test for rubyment_gem_spec. outputs the contents returned by that function.\nargs: none returns: none …\n"],["test__rune_functions","Rubyment","Rubyment.html#method-i-test__rune_functions","(args = ARGV)","<p>test for functions that adds syntatic sugar to exceptions.\n"],["test__rune_functions","RubymentModule","RubymentModule.html#method-i-test__rune_functions","(args = ARGV)","<p>test for functions that adds syntatic sugar to exceptions.\n"],["test__shell_enc_dec","Rubyment","Rubyment.html#method-i-test__shell_enc_dec","(args=ARGV)","<p>test__shell_enc_dec sanity test for shell_enc and shell_dec planned\nchanges: don&#39;t output to stdout …\n"],["test__shell_enc_dec","RubymentModule","RubymentModule.html#method-i-test__shell_enc_dec","(args=ARGV)","<p>test__shell_enc_dec sanity test for shell_enc and shell_dec planned\nchanges: don&#39;t output to stdout …\n"],["test__shell_send_array__main","RubymentModule","RubymentModule.html#method-i-test__shell_send_array__main","(args=[])","<p>experimental stuff coming. usage example: ./rubyment.rb  invoke_double p\ntest__shell_send_array__main …\n"],["test__string_repetition","RubymentModule","RubymentModule.html#method-i-test__string_repetition","(args=[])","<p>test for #string_repetition\n"],["test__system_rubyment","Rubyment","Rubyment.html#method-i-test__system_rubyment","(args=ARGV)","<p>test for system_rubyment dependee:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">test__gem_install_validate_uninstall</span>\n</pre>\n<p>args: args (Array or nil) returns: …\n"],["test__system_rubyment","RubymentModule","RubymentModule.html#method-i-test__system_rubyment","(args=ARGV)","<p>test for system_rubyment dependee:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">test__gem_install_validate_uninstall</span>\n</pre>\n<p>args: args (Array or nil) returns: …\n"],["test__tcp_server_plain","Rubyment","Rubyment.html#method-i-test__tcp_server_plain","(args = ARGV)","<p>test for tcp_server_plain\n"],["test__tcp_server_plain","RubymentModule","RubymentModule.html#method-i-test__tcp_server_plain","(args = ARGV)","<p>test for tcp_server_plain\n"],["test__tcp_server_plain__with_http_OK_response","Rubyment","Rubyment.html#method-i-test__tcp_server_plain__with_http_OK_response","(args = ARGV)","<p>test for tcp_server_plain (call #io_transform with a function that\nprocesses an http request and returns …\n"],["test__tcp_server_plain__with_http_OK_response","RubymentModule","RubymentModule.html#method-i-test__tcp_server_plain__with_http_OK_response","(args = ARGV)","<p>test for tcp_server_plain (call #io_transform with a function that\nprocesses an http request and returns …\n"],["test__tcp_server_plain__with_io_http_response","Rubyment","Rubyment.html#method-i-test__tcp_server_plain__with_io_http_response","(args = ARGV)","<p>test for tcp_server_plain\n"],["test__tcp_server_plain__with_io_http_response","RubymentModule","RubymentModule.html#method-i-test__tcp_server_plain__with_io_http_response","(args = ARGV)","<p>test for tcp_server_plain\n"],["test__tcp_server_plain__with_io_transform","Rubyment","Rubyment.html#method-i-test__tcp_server_plain__with_io_transform","(args = ARGV)","<p>test for tcp_server_plain (call io_transform)\n"],["test__tcp_server_plain__with_io_transform","RubymentModule","RubymentModule.html#method-i-test__tcp_server_plain__with_io_transform","(args = ARGV)","<p>test for tcp_server_plain (call io_transform)\n"],["test__tcp_ssl_server__get_root","Rubyment","Rubyment.html#method-i-test__tcp_ssl_server__get_root","(args = ARGV)","<p>tests test__tcp_ssl_server__io_method and opens another thread for the\nclient\n"],["test__tcp_ssl_server__get_root","RubymentModule","RubymentModule.html#method-i-test__tcp_ssl_server__get_root","(args = ARGV)","<p>tests test__tcp_ssl_server__io_method and opens another thread for the\nclient\n"],["test__tcp_ssl_server__get_root__plain_redirect","RubymentModule","RubymentModule.html#method-i-test__tcp_ssl_server__get_root__plain_redirect","(args = ARGV)","<p>tests test__tcp_ssl_server__io_method, creating two servers, one ssl and\nanother plain, redirecting to …\n"],["test__tcp_ssl_server__io_method","Rubyment","Rubyment.html#method-i-test__tcp_ssl_server__io_method","(args = ARGV)","<p>test for tcp_ssl_server (calling an <code>io_method</code>, by default\n#io_transform, with a function that processes …\n"],["test__tcp_ssl_server__io_method","RubymentModule","RubymentModule.html#method-i-test__tcp_ssl_server__io_method","(args = ARGV)","<p>test for tcp_ssl_server (calling an <code>io_method</code>, by default\n#io_transform, with a function that processes …\n"],["test__tcp_ssl_server__io_transform","Rubyment","Rubyment.html#method-i-test__tcp_ssl_server__io_transform","(args = ARGV)","<p>test for tcp_ssl_server (call #io_transform with a function that processes\nan http request and returns …\n"],["test__tcp_ssl_server__io_transform","RubymentModule","RubymentModule.html#method-i-test__tcp_ssl_server__io_transform","(args = ARGV)","<p>test for tcp_ssl_server (call #io_transform with a function that processes\nan http request and returns …\n"],["test__tcp_ssl_server__non_ssl","Rubyment","Rubyment.html#method-i-test__tcp_ssl_server__non_ssl","(args = ARGV)","<p>test for tcp_ssl_server (call #io_transform with a function that processes\nan http request and returns …\n"],["test__tcp_ssl_server__non_ssl","RubymentModule","RubymentModule.html#method-i-test__tcp_ssl_server__non_ssl","(args = ARGV)","<p>test for tcp_ssl_server (call #io_transform with a function that processes\nan http request and returns …\n"],["test__tcp_ssl_server__ssl_self_signed","Rubyment","Rubyment.html#method-i-test__tcp_ssl_server__ssl_self_signed","(args = ARGV)","<p>test for tcp_ssl_server (call #io_transform with a function that processes\nan http request and returns …\n"],["test__tcp_ssl_server__ssl_self_signed","RubymentModule","RubymentModule.html#method-i-test__tcp_ssl_server__ssl_self_signed","(args = ARGV)","<p>test for tcp_ssl_server (call #io_transform with a function that processes\nan http request and returns …\n"],["test__tester","RubymentModule","RubymentModule.html#method-i-test__tester","(args=[])","<p>generic function for test__ functions\n"],["test__transform_call","Rubyment","Rubyment.html#method-i-test__transform_call","(args = ARGV)","<p>calls a function with the processing arg @param [Array] <code>args</code>,\nan <code>Array</code> whose elements are expected to …\n"],["test__transform_call","RubymentModule","RubymentModule.html#method-i-test__transform_call","(args = ARGV)","<p>calls a function with the processing arg @param [Array] <code>args</code>,\nan <code>Array</code> whose elements are expected to …\n"],["test_enc_dec_interactive__ssl_sample_self_signed_cert","Rubyment","Rubyment.html#method-i-test_enc_dec_interactive__ssl_sample_self_signed_cert","(args=ARGV)","<p>test for ssl_sample_self_signed_cert_encrypted note: function name out of\nstandard. kept for open-closed …\n"],["test_enc_dec_interactive__ssl_sample_self_signed_cert","RubymentModule","RubymentModule.html#method-i-test_enc_dec_interactive__ssl_sample_self_signed_cert","(args=ARGV)","<p>test for ssl_sample_self_signed_cert_encrypted note: function name out of\nstandard. kept for open-closed …\n"],["time_now_hash","Rubyment","Rubyment.html#method-i-time_now_hash","(*args)","<p>generates a hash string based on current time @return [String]\n<code>Time.now.hash.abs.to_s</code>\n"],["time_now_hash","RubymentModule","RubymentModule.html#method-i-time_now_hash","(*args)","<p>generates a hash string based on current time @return [String]\n<code>Time.now.hash.abs.to_s</code>\n"],["to_class","Rubyment","Rubyment.html#method-i-to_class","(args=ARGV)","<p>returns a Class object out of class_name (or itself if it is already a\nclass)\n"],["to_class","RubymentModule","RubymentModule.html#method-i-to_class","(args=ARGV)","<p>returns a Class object out of class_name (or itself if it is already a\nclass)\n"],["to_method","Rubyment","Rubyment.html#method-i-to_method","(args = ARGV)","<p>returns a method object out of a string or a method object, in a\npolymorphic style. @param [Array] <code>args</code> …\n"],["to_method","RubymentModule","RubymentModule.html#method-i-to_method","(args = ARGV)","<p>returns a method object out of a string or a method object, in a\npolymorphic style. @param [Array] <code>args</code> …\n"],["to_nil","Object","Object.html#method-i-to_nil","()","<p>returns nil out of an object. usage examples:\n“this_parameter_is_nil”.to_nil\n"],["to_object_method","Rubyment","Rubyment.html#method-i-to_object_method","(args=ARGV)","<p>returns a Method (object.method if object is given) matching the name. Give\n<code>self</code> as object to look up …\n"],["to_object_method","RubymentModule","RubymentModule.html#method-i-to_object_method","(args=ARGV)","<p>returns a Method (object.method if object is given) matching the name. Give\n<code>self</code> as object to look up …\n"],["url_to_str","Rubyment","Rubyment.html#method-i-url_to_str","(url, rescue_value=nil)","<p>returns url contents\n"],["url_to_str","RubymentModule","RubymentModule.html#method-i-url_to_str","(url, rescue_value=nil)","<p>returns url contents\n"],["validate_require","Rubyment","Rubyment.html#method-i-validate_require","(args=ARGV)","<p>validate_require requires a file/gem in the system returns nil if not found\nargs: [requirement (String), …\n"],["validate_require","RubymentModule","RubymentModule.html#method-i-validate_require","(args=ARGV)","<p>validate_require requires a file/gem in the system returns nil if not found\nargs: [requirement (String), …\n"],["version","Rubyment","Rubyment.html#method-i-version","(args=ARGV)","<p>returns a version number comprised of a major and a minor number args:\n<p>major_version (String or nil), … &mdash; "],["version","RubymentModule","RubymentModule.html#method-i-version","(args=ARGV)","<p>returns a version number comprised of a major and a minor number args:\n<p>major_version (String or nil), … &mdash; "],["version_at_least","Rubyment","Rubyment.html#method-i-version_at_least","(*args)","<p>compares the version of current rubyment with a given version. so users of\nrubyment can test if their …\n"],["version_at_least","RubymentModule","RubymentModule.html#method-i-version_at_least","(*args)","<p>compares the version of current rubyment with a given version. so users of\nrubyment can test if their …\n"]]}}